<?php

namespace App\Filament\Resources\FundRequestResource\Widgets;

use App\Models\FundRequest;
use App\Models\Order;
use Filament\Widgets\StatsOverviewWidget as BaseWidget;
use Filament\Widgets\StatsOverviewWidget\Stat;
use Illuminate\Support\Carbon;
use Illuminate\Support\Collection;

class MonthlyPerformanceOverview extends BaseWidget
{
    /**
     * Reusable method to get delivered orders linked to a set of user IDs.
     */
    private function getDeliveredOrdersByRequesters(Collection $requesterIds, Carbon $monthDate): Collection
    {
        return Order::query()
            ->where('status', Order::STATUS_DELIVERED)
            ->whereMonth('updated_at', $monthDate->month)
            ->whereYear('updated_at', $monthDate->year)
            // Check if the requester ID is either the marketer or the call agent
            ->where(function ($query) use ($requesterIds) {
                $query->whereIn('marketer_id', $requesterIds)
                      ->orWhereIn('call_agent_id', $requesterIds);
            })
            ->get();
    }

    protected function getStats(): array
    {
        $currentMonth = now();
        
        // 1. Requested Fund Performance for this month (from ApprovedThisMonth scope)
        $approvedRequests = FundRequest::query()->approvedThisMonth()->get();
        
        $totalRequestedAmount = $approvedRequests->sum('amount');
        $requesterIds = $approvedRequests->pluck('user_id')->unique();
        $uniqueUsers = $requesterIds->count();
        
        // Find all orders delivered this month linked to these requesters
        $deliveredOrders = $this->getDeliveredOrdersByRequesters($requesterIds, $currentMonth);

        // Calculate the total price of delivered orders
        $totalDeliveredValue = $deliveredOrders->sum(fn ($order) => $order->getTotalPriceAttribute());

        return [
            Stat::make('Approved Requests This Month', number_format($approvedRequests->count()))
                ->description('Total approved fund requests')
                ->color('info')
                ->chart([7, 2, 10, 3, 15, 4, 17]),

            Stat::make('Total Approved Funds', '₦' . number_format($totalRequestedAmount, 2))
                ->description('Funds approved for users this month')
                ->color('danger'), // Changed to danger/info to represent cost

            Stat::make('Delivered Orders Value (This Month)', '₦' . number_format($totalDeliveredValue, 2))
                ->description('Total value generated by delivered orders')
                ->color($totalDeliveredValue >= $totalRequestedAmount ? 'success' : 'warning'),

            Stat::make('Unique Fund Requesters', $uniqueUsers)
                ->description('Marketers and Call Agents')
                ->color('primary'),
        ];
    }
}